<#@ template language="C#" #>
<#@ import namespace="Genie.Base" #>
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Models;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure
{
    public class FactoryRepository : IRepositoryFactory
    {
        public IRepository<T> CreateRepository<T>(IDapperContext context, UnitOfWork unit) where T : BaseModel
        {
            return  new Repository<T>(context, unit);
        }

        public IReadOnlyRepository<T> CreateReadOnlyRepository<T>(IDapperContext context) where T : class
        {
            return  new ReadOnlyRepository<T>(context);
        }
    }
}
