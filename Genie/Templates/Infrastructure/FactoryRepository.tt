<#@ template language="C#" #>
<#@ import namespace="Genie.Base" #>
using <#=GenerationContext.BaseNamespace#>.General;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Models;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure
{
    public class FactoryRepository : IFactoryRepository
    {
        public IRepository<T, TEnumSp> CreateRepository<T, TEnumSp>(IDapperContext context, UnitOfWork unit) where T : BaseModel where TEnumSp : EnumBase<TEnumSp, string>
        {
            return  new Repository<T, TEnumSp>(context, unit);
        }

        public IViewRepository<T, TEnumSp> CreateViewRepository<T, TEnumSp>(IDapperContext context) where T : class where TEnumSp : EnumBase<TEnumSp, string>
        {
            return  new ViewRepository<T, TEnumSp>(context);
        }
    }

}
